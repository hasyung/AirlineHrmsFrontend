// Generated by CoffeeScript 1.7.1
(function() {
  var creds, errPassRes, errPsdCreds, errUserCreds, errUserRes, user;

  creds = {
    login: 'admin@abc.com',
    password: '12345678'
  };

  errUserCreds = {
    login: 'errAdmin',
    password: 'errPsw'
  };

  errPsdCreds = {
    login: 'admin@abc.com',
    password: 'errPsw'
  };

  user = {
    avatar_url: "http://192.168.3.19:3000/assets/defaults/user/avatar.png",
    id: "532ba8c9bf63b7f258000001",
    name: "管理员"
  };

  errPassRes = {
    message: "invalid password!"
  };

  errUserRes = {
    message: "no this user!"
  };

  describe('LoginCtrl', function() {
    var $httpBackend, $timeout, Auth, createController, scope;
    scope = $httpBackend = createController = $timeout = Auth = void 0;
    beforeEach(angular.mock.module('vxApp'));
    beforeEach(inject(function($injector, $controller, $rootScope) {
      var loginPost;
      $httpBackend = $injector.get('$httpBackend');
      $timeout = $injector.get('$timeout');
      Auth = $injector.get('Auth');
      scope = $rootScope.$new();
      createController = function() {
        return $controller('LoginCtrl', {
          $scope: scope
        });
      };
      loginPost = function(req) {
        var reqStr;
        reqStr = JSON.stringify({
          user: req
        });
        return function(str) {
          console.log("str :" + str + " reqStr: " + reqStr);
          return str === reqStr;
        };
      };
      $httpBackend.when('POST', '/web_api/v1/sessions.json', loginPost(creds)).respond(user);
      $httpBackend.when('POST', '/web_api/v1/sessions.json', loginPost(errUserCreds)).respond(401, errUserRes);
      return $httpBackend.when('POST', '/web_api/v1/sessions.json', loginPost(errPsdCreds)).respond(401, errPassRes);
    }));
    afterEach(function() {
      $httpBackend.verifyNoOutstandingExpectation();
      return $httpBackend.verifyNoOutstandingRequest();
    });
    it('未登录', function() {
      return expect(Auth.isAuthenticated()).toBe(false);
    });
    it('正常登陆', function() {
      createController();
      scope.login(creds);
      $httpBackend.flush();
      expect(Auth.isAuthenticated()).toBe(true);
      return expect(Auth._currentUser).toEqual(user);
    });
    it('错误密码', function() {
      createController();
      scope.login(errPsdCreds);
      $httpBackend.flush();
      return expect(Auth.isAuthenticated()).toBe(false);
    });
    return it('用户名错误', function() {
      createController();
      scope.login(errUserCreds);
      $httpBackend.flush();
      return expect(Auth.isAuthenticated()).toBe(false);
    });
  });

}).call(this);
